<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<UsingTask TaskName="NugetRepoReadme.ReadmeRewriterTask"
			   AssemblyFile="$(MSBuildThisFileDirectory)..\tasks\netstandard2.0\$(MSBuildThisFileName).dll" />
	<UsingTask TaskName="NugetRepoReadme.ReadmeWriterTask"
			   AssemblyFile="$(MSBuildThisFileDirectory)..\tasks\netstandard2.0\$(MSBuildThisFileName).dll" />

	<!-- 1. Always define a dummy target to anchor things if BeforePack is not defined -->
	<Target Name="BeforePackHook_NugetRepoReadme" />

	<!-- 2. If BeforePack is not defined, point it to BeforePackHook_NugetRepoReadme -->
	<PropertyGroup>
		<BeforePack Condition="'$(BeforePack)' == ''">BeforePackHook_NugetRepoReadme</BeforePack>
	</PropertyGroup>
	<!-- or instead _GetPackageFiles -->
	
	
	<Target Name="ReadmeRewrite_ForPack">

		<!-- Require the caller to set PackageReadmeFile (relative to project directory) -->
		<Error Condition="'$(PackageReadmeFile)' == ''"
			   Text="ReadmeRewrite: you must set &lt;PackageReadmeFile&gt; in the project (path RELATIVE to the project directory, e.g. README.nuget.md)." />

		<PropertyGroup>
			<!-- Extract filename and package subdirectory from PackageReadmeFile -->
			<_ReadmeFilename>$([System.IO.Path]::GetFileName($(PackageReadmeFile)))</_ReadmeFilename>
			<_ReadmePackageDir>$([System.IO.Path]::GetDirectoryName($(PackageReadmeFile)))</_ReadmePackageDir>

			<!-- Default: IntermediateOutputPath\ReadmeRewrite -->
			<_ReadmeOutputDir Condition="'$(GeneratedReadmeDirectory)' == '' and $([System.IO.Path]::IsPathRooted('$(IntermediateOutputPath)'))">$([System.IO.Path]::Combine('$(IntermediateOutputPath)', 'ReadmeRewrite'))</_ReadmeOutputDir>
			<_ReadmeOutputDir Condition="'$(GeneratedReadmeDirectory)' == '' and ! $([System.IO.Path]::IsPathRooted('$(IntermediateOutputPath)'))">$([System.IO.Path]::Combine('$(MSBuildProjectDirectory)', '$(IntermediateOutputPath)', 'ReadmeRewrite'))</_ReadmeOutputDir>

			<!-- If custom path is absolute, use it as-is -->
			<_ReadmeOutputDir Condition="'$(GeneratedReadmeDirectory)' != '' and $([System.IO.Path]::IsPathRooted('$(GeneratedReadmeDirectory)'))">$(GeneratedReadmeDirectory)</_ReadmeOutputDir>

			<!-- If custom path is relative, combine with project directory -->
			<_ReadmeOutputDir Condition="'$(GeneratedReadmeDirectory)' != '' and !$([System.IO.Path]::IsPathRooted('$(GeneratedReadmeDirectory)'))">$([System.IO.Path]::Combine('$(MSBuildProjectDirectory)', '$(GeneratedReadmeDirectory)'))</_ReadmeOutputDir>

			<_OutputReadmeAbsolute>$([System.IO.Path]::Combine('$(_ReadmeOutputDir)', '$(_ReadmeFilename)'))</_OutputReadmeAbsolute>
		</PropertyGroup>

		<!-- Run the rewrite task -->
		<ReadmeRewriterTask
			ProjectDirectoryPath="$(MSBuildProjectDirectory)"
			ReadmeRelativePath="$(BaseReadme)"

			RepositoryUrl="$(RepositoryUrl)"
			ReadmeRepositoryUrl="$(ReadmeRepositoryUrl)"
            
			RepositoryBranch="$(RepositoryBranch)"
			RepositoryCommit="$(RepositoryCommit)"
			RepositoryRef="$(RepositoryRef)"
            
			RemoveCommentIdentifiers="$(RemoveCommentIdentifiers)"
			RemoveReplaceItems="@(ReadmeRemoveReplace)"
			RemoveReplaceWordsItems="@(ReadmeRemoveReplaceWords)"

			ErrorOnHtml="$(ErrorOnHtml)"
        >
			<Output TaskParameter="OutputReadme"
					PropertyName="NugetReadmeContent" />
		</ReadmeRewriterTask>

	</Target>
	<Target Name="TransformNugetReadme"></Target>
	<Target Name="WriteNugetReadme"
			BeforeTargets="$(BeforePack)"
			DependsOnTargets="_InitializeNuspecRepositoryInformationProperties;ReadmeRewrite_ForPack;TransformNugetReadme"
			Condition="'$(IsPackable)' != 'false'"
          >
		<ReadmeWriterTask OutputReadme="$(_OutputReadmeAbsolute)"
						ReadmeContents="$(NugetReadmeContent)"/>
		<ItemGroup>
			<None Include="$(_OutputReadmeAbsolute)"
				  Pack="true"
				  PackagePath="$(_ReadmePackageDir)"/>
		</ItemGroup>
	</Target>
</Project>
